name: Deploy Multi-Game Platform to Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: multi-game-platform
  KUBE_NAMESPACE: games

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Test HTML validity
      run: |
        npm install -g html-validator-cli
        html-validator --file index.html --verbose

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/multi-game-platform:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/multi-game-platform:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure Kubernetes
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
        kubectl config view --minify

    - name: Create namespace
      run: |
        kubectl create namespace ${{ env.KUBE_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
      continue-on-error: true

    - name: Deploy to Kubernetes
      run: |
        # Update image in deployment
        sed -i 's|himanshutoshniwal7570/multi-game-platform:latest|${{ secrets.DOCKERHUB_USERNAME }}/multi-game-platform:${{ github.sha }}|g' Kubernetes/deployment.yaml
        
        # Apply deployment
        kubectl apply -f Kubernetes/deployment.yaml -n ${{ env.KUBE_NAMESPACE }}
        
        # Wait for rollout
        kubectl rollout status deployment/multi-game-platform -n ${{ env.KUBE_NAMESPACE }} --timeout=300s

    - name: Get deployment info
      run: |
        kubectl get pods -n ${{ env.KUBE_NAMESPACE }}
        kubectl get svc -n ${{ env.KUBE_NAMESPACE }}
        echo "Access the app at: http://localhost:30000"